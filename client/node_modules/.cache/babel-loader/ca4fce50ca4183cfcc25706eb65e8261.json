{"ast":null,"code":"var _jsxFileName = \"/Users/matthewschnapp/Projects/toolreact/client/src/App.js\";\nimport React from 'react'; // eslint-disable-next-line no-unused-vars\n\nimport axios from 'axios';\nimport './App.css';\nimport ToolView from './components/tools/viewTools/ToolView';\nimport Header from './components/header/header';\nimport Leftbar from './components/leftbar/Leftbar';\nimport AddTools from './components/tools/addTools/AddTools';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tools: [],\n      id: '',\n      toolNumber: '',\n      description: '',\n      usedCount: 0,\n      checkOut: false,\n      broken: false,\n      missing: false,\n      comments: '',\n      intervalIsSet: false,\n      idToDelete: null,\n      objectToUpdate: null\n    };\n\n    this.getDataFromDb = () => {\n      fetch('http://localhost:3001/api/getData').then(tools => tools.json()).then(res => this.setState({\n        tools: res.tools\n      }));\n    };\n\n    this.missing = id => {\n      this.setState({\n        tools: this.state.tools.map(tool => {\n          if (tool.id === id && tool.broken === false) {\n            tool.missing = !tool.missing;\n          }\n\n          return tool;\n        })\n      });\n    };\n\n    this.broken = id => {\n      this.setState({\n        tools: this.state.tools.map(tool => {\n          if (tool.id === id && tool.missing === false) {\n            tool.broken = !tool.broken;\n          }\n\n          return tool;\n        })\n      });\n    };\n\n    this.checkOut = id => {\n      this.setState({\n        tools: this.state.tools.map(tool => {\n          if (tool.id === id) {\n            tool.checkOut = !tool.checkOut;\n          }\n\n          return tool;\n        })\n      });\n    };\n\n    this.comment = id => {\n      this.setState({\n        tools: this.state.tools.map(tool => {\n          if (tool.id === id) {\n            tool.comment = Comment;\n          }\n\n          return tool;\n        })\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"belowheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftBar col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Leftbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(AddTools, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ToolView, {\n      tool: this.state.tool,\n      broken: this.broken,\n      missing: this.missing,\n      checkOut: this.checkOut,\n      comment: this.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewschnapp/Projects/toolreact/client/src/App.js"],"names":["React","axios","ToolView","Header","Leftbar","AddTools","App","Component","state","tools","id","toolNumber","description","usedCount","checkOut","broken","missing","comments","intervalIsSet","idToDelete","objectToUpdate","getDataFromDb","fetch","then","json","res","setState","map","tool","comment","Comment","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport axios from 'axios'\nimport './App.css'\nimport ToolView from './components/tools/viewTools/ToolView'\nimport Header from './components/header/header'\nimport Leftbar from './components/leftbar/Leftbar'\nimport AddTools from './components/tools/addTools/AddTools'\n\nclass App extends React.Component {\n        state = {\n          tools: [],\n          id: '',\n          toolNumber: '',\n          description: '',\n          usedCount: 0,\n          checkOut: false,\n          broken: false,\n          missing: false,\n          comments: '',\n          intervalIsSet: false,\n          idToDelete: null,\n          objectToUpdate: null,\n        };\n    componentDidMount() {\n        this.getDataFromDb();\n        if (!this.state.intervalIsSet) {\n          let interval = setInterval(this.getDataFromDb, 1000);\n          this.setState({ intervalIsSet: interval });\n        }\n      }\n    componentWillUnmount() {\n        if (this.state.intervalIsSet) {\n          clearInterval(this.state.intervalIsSet);\n          this.setState({ intervalIsSet: null });\n        }\n      }\n    getDataFromDb = () => {\n        fetch('http://localhost:3001/api/getData')\n          .then((tools) => tools.json())\n          .then((res) => this.setState({ tools: res.tools }));\n      };\n    missing = (id) => {\n      this.setState({ tools: this.state.tools.map(tool => {\n        if(tool.id === id && tool.broken === false) {\n          tool.missing = !tool.missing\n         }\n          return tool\n        })});\n      } \n    broken = (id) => {\n      this.setState({ tools: this.state.tools.map(tool => {\n        if(tool.id === id && tool.missing === false) {\n          tool.broken = !tool.broken\n         }\n          return tool;\n        })});\n      }   \n    checkOut = (id) => {\n      this.setState({ tools: this.state.tools.map(tool => {\n        if(tool.id === id) {\n          tool.checkOut = !tool.checkOut\n        }\n          return tool;\n      })});\n    } \n    comment = (id) => {\n      this.setState({ tools: this.state.tools.map(tool => {\n        if(tool.id === id) {\n          tool.comment = Comment\n        }\n        return tool;\n      })})\n    }\nrender() {\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <Header />\n      </div>\n      <div className=\"belowheader\">\n      <div className=\"leftBar col\">\n        <Leftbar />\n        <AddTools />\n      </div>\n      <div className=\"main col\">\n        <React.Fragment>\n          <ToolView tool={this.state.tool}\n                 broken={this.broken}\n                 missing={this.missing}\n                 checkOut={this.checkOut}\n                 comment={this.comment}\n                 />\n        </React.Fragment>\n      </div>\n      </div>\n    </div>\n  );\n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}